import 'package:injectable/injectable.dart';
import 'package:untitled4/core/errors/error.dart';
import 'package:untitled4/core/network/api_requester.dart';
import 'package:untitled4/core/network/network_info.dart';
import 'package:untitled4/model/countries_list_model.dart';
import 'package:untitled4/model/country_model.dart';

abstract class CountriesRemoteDatasource {
  Future<List<Autogenerated>> fetchCountries();



}

@LazySingleton(as: CountriesRemoteDatasource)
class CountriesRemoteDatasourceImpl implements CountriesRemoteDatasource {

  CountriesRemoteDatasourceImpl({
    required this.apiRequester,
    required this.networkInfo,
  });

  final NetworkInfo networkInfo;
  final ApiRequester apiRequester;

  @override
  Future<List<Autogenerated>> fetchCountries()async{
    if (await networkInfo.isConnected) {

      final response = await apiRequester.getRequest();

    return CountryListModel.fromJson(
    response.data as Map<String, dynamic>,
    ).data;
    } else {
    throw NoInternetException();
    }
  }

}